---
- name: Get current zones
  shell: firewall-cmd --get-zones --permanent
  when: firewalld_running
  register: zone_list
  changed_when: False

- name: Create zone
  shell: firewall-cmd --new-zone={{ item.zone }} --permanent
  register: required_force_restart
  when:
   - firewalld_running
   - item.zone not in zone_list.stdout
   - item.state == 'enabled'
  with_items: "{{ shhirose_firewalld.zones | default([]) }}"
  notify: Reload firewalld

- name: Force restart firewalld
  shell: firewall-cmd --reload
  when:
   - required_force_restart.changed
   - firewalld_running

- name: Get current zones
  shell: firewall-offline-cmd --get-zones
  when: not firewalld_running
  register: zone_list
  changed_when: False

- name: Create zone
  shell: firewall-offline-cmd --new-zone={{ item.zone }}
  register: required_force_restart
  when:
   - not firewalld_running
   - item.zone not in zone_list.stdout
   - item.state == 'enabled'
  with_items: "{{ shhirose_firewalld.zones | default([]) }}"

- name: Force restart firewalld
  shell: firewall-cmd --reload
  when:
   - required_force_restart.changed
   - firewalld_running

- name: Wait a moment for the new zones to get noticed
  pause:
    seconds: 5

- include: "default-zone-offline.yml"
  when: not firewalld_running

- include: "default-zone-online.yml"
  when: firewalld_running

- include: "target.yml"

- include: "interface.yml"

- include: "service_config.yml"

- include: "service.yml"

- include: "port.yml"

- include: "rich-rule.yml"

- include: "source-pre.yml"

- include: "source-offline.yml"
  when: not firewalld_running

- include: "source-online.yml"
  when: firewalld_running

- include: "source.yml"

- include: "masquerade.yml"

- include: "forward-port.yml"

- include: "icmp-block-offline.yml"
  when: not firewalld_running

- include: "icmp-block-online.yml"
  when: firewalld_running

- name: Get current zones
  shell: firewall-cmd --get-zones --permanent
  when: firewalld_running
  register: zone_list
  changed_when: False

- name: Delete zone
  shell: firewall-cmd --delete-zone={{ item.zone }} --permanent
  when:
   - firewalld_running
   - item.zone in zone_list.stdout
   - item.state == 'disabled'
  with_items: "{{ shhirose_firewalld.zones | default([]) }}"
  notify: Reload firewalld

- name: Get current zones
  shell: firewall-offline-cmd --get-zones
  when: not firewalld_running
  register: zone_list
  changed_when: False

- name: Delete zone
  shell: firewall-offline-cmd --delete-zone={{ item.zone }}
  when:
   - not firewalld_running
   - item.zone in zone_list.stdout
   - item.state == 'disabled'
  with_items: "{{ shhirose_firewalld.zones | default([]) }}"
